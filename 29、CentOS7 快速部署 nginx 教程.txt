1.下载 nginx
http://nginx.org/download/nginx-1.13.7.tar.gz

2.一键安装上面四个依赖
yum -y install gcc zlib zlib-devel pcre-devel openssl openssl-devel

3.下载并解压安装包
tar -xvf nginx-1.13.7.tar.g -C /usr/local/nginx

4.安装nginx
//进入nginx目录
cd /usr/local/nginx
//执行命令
./configure
//执行make命令
make
//执行make install命令
make install
// 查看安装目录
whereis nginx

5.配置nginx.conf
vi conf/nginx.conf

6.启动nginx
/usr/local/nginx/sbin/nginx -s reload

7.查看nginx进程是否启动
ps -ef | grep nginx

8.关闭防火墙命令
systemctl stop firewalld.service

9. nginx 常用命令
启动 /usr/local/nginx/sbin/nginx
关闭 /usr/local/nginx/sbin/nginx -s stop
重启 /usr/local/nginx/sbin/nginx -s reload
补充启动  /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf


=============  负载均衡配置 =============

#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        /app/logs/nginx/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    upstream tomcat01{
		server 192.168.0.7:8080 backup;	#权重默认都是1（默认状态是轮询）
		server 192.168.0.7:8082 weight=2;
		server 192.168.0.7:8083 weight=5;
	}

    server {
       listen       8888;
       server_name  localhost;

       location / {
           #root path;  #根目录
           #index  index.html index.htm; #设置默认页
           proxy_pass  http://tomcat01;  #请求转向服务器列表
        #    proxy_pass  http://192.168.0.7:8080;  #请求转向服务器列表
           deny 127.0.0.1;  #拒绝的ip
           allow 172.18.5.54; #允许的ip
       }
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
    


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
